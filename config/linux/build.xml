<!--
Copyright LWJGL. All rights reserved.
License terms: http://lwjgl.org/license.php
-->
<project name="native-linux" basedir="../.." xmlns:if="ant:if" xmlns:unless="ant:unless">
	<import file="../build-definitions.xml"/>

	<condition property="LWJGL_LIBRARY" value="liblwjgl.so" else="liblwjgl32.so">
		<equals arg1="${build.arch}" arg2="x64"/>
	</condition>

	<property name="system_libs" value="-lm -lpthread -lX11 -lGL -lXi -lXrandr -lXxf86vm -lXinerama -lXcursor"/>

	<condition
		property="libs"
		value=
			"-L/usr/X11R6/lib -L/usr/X11/lib ${system_libs}"
		else=
			"-L/usr/X11R6/lib64 -L/usr/X11/lib64 ${system_libs}"
		>
		<equals arg1="${build.arch}" arg2="x86"/>
	</condition>

	<condition property="compiler.arch" value="-m32" else="-m64">
		<equals arg1="${build.arch}" arg2="x86"/>
	</condition>

	<fileset id="link-objects" dir="${bin.native}" includes="*.o"/>
	<fileset id="link-libraries" dir="${lib.abs}/linux/${build.arch}/">
		<include name="libffi.a"/>
		<include name="libglfw3.a" if:true="${build.glfw}"/>
	</fileset>

	<target name="compile-native-platform">
		<!-- COMPILE -->
		<property name="warnings" value="-Werror -Wfatal-errors -Wall -Wextra -pedantic -Wno-extended-offsetof"/>

		<apply dir="${bin.native}" executable="gcc" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
			<arg line="-c -std=c11 ${compiler.arch} -O3 -fPIC ${warnings} -pthread -D_XOPEN_SOURCE=700 -DLWJGL_LINUX"/>
			<arg value="-I${java.home}/../include"/>
			<arg value="-I${java.home}/../include/linux"/>

			<!-- Paths relative to dir -->
			<arg value="-I${src.native.abs}/system"/>
			<arg value="-I${src.native.abs}/system/linux"/>
			<arg value="-I${src.native.abs}/system/libffi"/>
			<arg value="-I${src.native.abs}/stb" if:true="${build.stb}"/>
			<arg value="-I${src.native.abs}/glfw" if:true="${build.glfw}"/>
			<arg value="-I${src.native.abs}/openal" if:true="${build.openal}"/>
			<arg value="-I${src.native.abs}/opencl" if:true="${build.opencl}"/>
			<arg value="-I${src.native.abs}/opengl" if:true="${build.opengl}"/>
			<arg value="-I${src.native.abs}/opengl/glx" if:true="${build.opengl}"/>

			<!-- Paths relative to basedir -->
			<fileset dir="${src.native}/system" includes="*.c"/>
			<fileset dir="${src.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/system" includes="*.c"/>
			<fileset dir="${generated.native}/system/linux" includes="*.c"/>
			<fileset dir="${generated.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/stb" includes="*.c" if:true="${build.stb}"/>
			<fileset dir="${generated.native}/glfw" includes="*.c" if:true="${build.glfw}"/>
			<fileset dir="${generated.native}/glfw/linux" includes="*.c" if:true="${build.glfw}"/>
			<fileset dir="${generated.native}/openal" includes="*.c" if:true="${build.openal}"/>
			<fileset dir="${generated.native}/opencl" includes="*.c" if:true="${build.opencl}"/>
			<fileset dir="${generated.native}/opengl" includes="*.c" if:true="${build.opengl}"/>
			<fileset dir="${generated.native}/opengl/glx" includes="*.c" if:true="${build.opengl}"/>

			<globmapper from="*.c" to="*.o"/>
		</apply>

		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${lib}/${LWJGL_LIBRARY}">
			<srcfiles file="config/${platform}/build.xml"/>
			<srcfiles refid="link-objects"/>
			<srcfiles refid="link-libraries"/>
		</uptodate>

		<antcall target="-link-if-necessary"/>
	</target>

	<target name="-link-if-necessary" unless="link-uptodate">
		<antcall target="-link"/>
	</target>

	<target name="-update-dependencies-x86">
		<mkdir dir="${lib}/linux"/>
		<mkdir dir="${lib}/linux/x86"/>

		<update-dependency name="OpenAL32 (x86)" artifact="x86/libopenal.so" dest="${lib}/libopenal32.so" if:true="${build.openal}"/>
		<update-dependency name="glfw3 (x86)" artifact="x86/libglfw3.a" if:true="${build.glfw}"/>
		<update-dependency name="libffi (x86)" artifact="x86/libffi.a"/>
	</target>

	<target name="-update-dependencies-x64">
		<mkdir dir="${lib}/linux"/>
		<mkdir dir="${lib}/linux/x64"/>

		<update-dependency name="OpenAL32 (x64)" artifact="x64/libopenal.so" dest="${lib}/libopenal.so" if:true="${build.openal}"/>
		<update-dependency name="glfw3 (x64)" artifact="x64/libglfw3.a" if:true="${build.glfw}"/>
		<update-dependency name="libffi (x64)" artifact="x64/libffi.a"/>
	</target>

	<target name="-update-dependencies" unless="${build.offline}">
		<antcall target="-update-dependencies-${build.arch}"/>
	</target>

	<target name="-link" depends="-update-dependencies">
		<local name="version.script"/>
		<property name="version.script" location="config/linux/version.script"/>

		<apply dir="${lib}" executable="gcc" failonerror="true" parallel="true" taskname="Linker">
			<srcfile/>
			<arg line="-shared ${compiler.arch} -fPIC -pthread -o ${LWJGL_LIBRARY} ${libs} -Xlinker --version-script -Xlinker ${version.script}"/>

			<fileset refid="link-objects"/>
			<fileset refid="link-libraries"/>
		</apply>

		<apply dir="${lib}" executable="strip" failonerror="true" taskname="Symbol strip">
			<fileset file="${LWJGL_LIBRARY}"/>
		</apply>

		<apply executable="${org.lwjgl.upx}/upx" failonerror="true" taskname="UPX" if:set="org.lwjgl.upx">
			<arg value="-9"/>
			<filelist dir="${lib}" files="${LWJGL_LIBRARY}"/>
		</apply>
	</target>
</project>
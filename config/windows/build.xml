<!--
Copyright LWJGL. All rights reserved.
License terms: http://lwjgl.org/license.php
-->
<project name="native-windows" basedir="../.." xmlns:if="ant:if" xmlns:unless="ant:unless">
	<import file="../build-definitions.xml"/>

	<condition property="LWJGL_LIBRARY" value="lwjgl.dll" else="lwjgl32.dll">
		<equals arg1="${build.arch}" arg2="x64"/>
	</condition>

	<property name="libs" value="Kernel32.lib user32.lib Gdi32.lib winmm.lib shell32.lib"/>

	<fileset id="link-objects" dir="${bin.native}" includes="*.obj"/>
	<fileset id="link-libraries" dir="${lib.abs}/windows/${build.arch}/">
		<include name="libffi.lib"/>
		<include name="glfw3.lib" if:true="${build.glfw}"/>
	</fileset>

	<condition property="build.ovr.arch" value="x64" else="Win32" if:true="${build.ovr}">
		<equals arg1="${build.arch}" arg2="x64"/>
	</condition>
	<fileset id="link-ovr" dir="${OCULUS_SDK_PATH}/LibOVR/lib/Windows/${build.ovr.arch}/Release/VS2013" includes="*.lib" if:true="${build.ovr}"/>

	<target name="compile-native-platform">
		<!-- COMPILE -->
		<apply dir="${bin.native}" executable="cl" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler">
			<!-- TODO: Fix deprecated API usages and remove C4996 ignore -->
			<arg line="/c /Wall /WX /EHsc /Ox /Gy /GR- /MT /MP /nologo /DLWJGL_WINDOWS"/>

			<arg value="/I${java.home}\..\include"/>
			<arg value="/I${java.home}\..\include\win32"/>

			<!-- Paths relative to dir -->
			<arg value="/I${src.native.abs}\system"/>
			<arg value="/I${src.native.abs}\system\windows"/>
			<arg value="/I${src.native.abs}\system\libffi"/>
			<arg value="-I${src.native.abs}\stb" if:true="${build.stb}"/>
			<arg value="/I${src.native.abs}\glfw" if:true="${build.glfw}"/>
			<arg value="/I${src.native.abs}\openal" if:true="${build.openal}"/>
			<arg value="/I${src.native.abs}\opencl" if:true="${build.opencl}"/>
			<arg value="/I${src.native.abs}\opengl" if:true="${build.opengl}"/>
			<arg value="/I${src.native.abs}\opengl\wgl" if:true="${build.opengl}"/>
			<arg value="/I${OCULUS_SDK_PATH}\LibOVR\Include" if:true="${build.ovr}"/>

			<!-- Paths relative to basedir -->
			<fileset dir="${src.native}/system" includes="*.c"/>
			<fileset dir="${src.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/system" includes="*.c"/>
			<fileset dir="${generated.native}/system/windows" includes="*.c"/>
			<fileset dir="${generated.native}/system/libffi" includes="*.c"/>
			<fileset dir="${generated.native}/stb" includes="*.c" if:true="${build.stb}"/>
			<fileset dir="${generated.native}/glfw" includes="*.c" if:true="${build.glfw}"/>
			<fileset dir="${generated.native}/glfw/windows" includes="*.c" if:true="${build.glfw}"/>
			<fileset dir="${generated.native}/openal" includes="*.c" if:true="${build.openal}"/>
			<fileset dir="${generated.native}/opencl" includes="*.c" if:true="${build.opencl}"/>
			<fileset dir="${generated.native}/opengl" includes="*.c" if:true="${build.opengl}"/>
			<fileset dir="${generated.native}/opengl/wgl" includes="*.c" if:true="${build.opengl}"/>
			<fileset dir="${generated.native}/ovr" includes="*.c" if:true="${build.ovr}"/>

			<mapper type="glob" from="*.c" to="*.obj"/>
		</apply>

		<!-- Compile the LibOVR CAPI shim -->
		<apply dir="${bin.native}" executable="cl" dest="${bin.native}" skipemptyfilesets="true" failonerror="true" parallel="true" taskname="Compiler" if:true="${build.ovr}">
			<arg line="/c /W4 /EHsc /Ox /Gy /GR- /MT /MP /nologo"/>

			<arg value="/I${OCULUS_SDK_PATH}\LibOVR\Include"/>
			<fileset dir="${OCULUS_SDK_PATH}/LibOVR/Src" includes="*"/>

			<mapper type="regexp" from="(\w+)[.]c(?:pp)?$" to="\1.obj"/>
		</apply>

		<!-- LINK -->
		<uptodate property="link-uptodate" targetfile="${lib}/${LWJGL_LIBRARY}">
			<srcfiles file="config/${platform}/build.xml"/>
			<srcfiles refid="link-objects"/>
			<srcfiles refid="link-libraries"/>
		</uptodate>

		<antcall target="-link-if-necessary" />
	</target>

	<target name="-link-if-necessary" unless="link-uptodate">
		<antcall target="-link"/>
	</target>

	<target name="-update-dependencies-x86">
		<mkdir dir="${lib}/windows"/>
		<mkdir dir="${lib}/windows/x86"/>

		<update-dependency name="OpenAL32 (x86)" artifact="x86/OpenAL32.dll" dest="${lib}/OpenAL32.dll" if:true="${build.openal}"/>
		<update-dependency name="glfw3 (x86)" artifact="x86/glfw3.lib" if:true="${build.glfw}"/>
		<update-dependency name="libffi (x86)" artifact="x86/libffi.lib"/>
	</target>

	<target name="-update-dependencies-x64">
		<mkdir dir="${lib}/windows"/>
		<mkdir dir="${lib}/windows/x64"/>

		<update-dependency name="OpenAL32 (x64)" artifact="x64/OpenAL32.dll" dest="${lib}/OpenAL.dll" if:true="${build.openal}"/>
		<update-dependency name="glfw3 (x64)" artifact="x64/glfw3.lib" if:true="${build.glfw}"/>
		<update-dependency name="libffi (x64)" artifact="x64/libffi.lib"/>
	</target>

	<target name="-update-dependencies" unless="${build.offline}">
		<antcall target="-update-dependencies-${build.arch}"/>
	</target>

	<target name="-link" depends="-update-dependencies">
		<apply dir="${lib}" executable="cl" failonerror="true" parallel="true" taskname="Linker">
			<arg line='/LD /WX /nologo /Fe:"${LWJGL_LIBRARY}"'/>
			<srcfile/>
			<arg line="/link /OPT:REF,ICF /DLL ${libs}"/>
			<arg value="OpenGL32.lib" if:true="${build.opengl}"/>

			<fileset refid="link-objects"/>
			<fileset refid="link-libraries"/>
		</apply>

		<apply executable="${org.lwjgl.upx}/upx" failonerror="true" taskname="UPX" if:set="org.lwjgl.upx">
			<arg value="-9"/>
			<filelist dir="${lib}" files="${LWJGL_LIBRARY}"/>
		</apply>
	</target>
</project>